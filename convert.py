import random
import os
import timeit
from gensim.models.doc2vec import Doc2Vec, TaggedDocument
carpeta="C:/Users/L03040561/Desktop/embed/"
etiquetas=["Adware", "Backdoor", "Downloader", "Dropper", "Spyware", "Trojan", "Virus", "Worms"];

def recode():
    f=open(carpeta+"data.txt")
    fOut=open(carpeta+"dataNum.txt", "w")
    palabras=dict()
    i=0;
    for line in f:
        line=line.rstrip();
        partes=line.split(" ")
        if partes[0] not in palabras.keys():
                palabras[partes[0]]=i
                i+=1
        fOut.write(str(palabras[partes[0]]))
        for parte in partes[1:]:
            if parte not in palabras.keys():
                palabras[parte]=i
                i+=1
            fOut.write(" "+str(palabras[parte]))
        fOut.write("\n");
    fOut.close();
    fOut=open(carpeta+"dict.txt", "w")
    for key in palabras.keys():
        fOut.write(key+":"+str(palabras[key])+"\n")
    fOut.close();
    f.close();



def obtenerPorEtiqueta():
    global carpeta
    fData=open(carpeta+"data.txt")
    fLabels=open(carpeta+"labels.csv")
    data=dict()
    for line in fData:
        label=fLabels.readline()
        line=line.rstrip();
        label=label.rstrip();
        if label not in data.keys():
            data[label]=[]
        data[label].append(line)
    fData.close();
    fLabels.close();
    for label in data.keys():
        fOut=open(carpeta+label+".txt", "w")
        random.shuffle(data[label])
        for elemento in data[label]:
            fOut.write(elemento)
            fOut.write("\n")
        fOut.close()

def obtenerFoldsPorEtiqueta():
    global carpeta
    global etiquetas
    subfolder=carpeta+"9010/"
    if not os.path.exists(subfolder):
        os.mkdir(subfolder);
    for etiqueta in etiquetas:
        abiertos=[]
        for i in range(1, 11):
            abiertos.append(open(subfolder+etiqueta+str(i)+".txt", "w"));
        f=open(carpeta+etiqueta+".txt");
        i=0;
        for line in f:
            abiertos[i].write(line);
            i+=1;
            i=i%10;
        for i in range(0, 10):
            abiertos[i].close();

def generateTrainingFullFold(fold, ep):
    global carpeta
    global etiquetas
    carpetaData=carpeta+"9010/";
    carpetaModels=carpeta+"models/";
    carpetaFolds=carpeta+"folds/"
    docs=[]
    for etiqueta in etiquetas:
        i=0;
        for foldActual in range(1, 11):
            if foldActual==fold:
                continue
            fData=open(carpetaData+etiqueta+str(foldActual)+".txt");
            for line in fData:
                line=line.rstrip();
                partes=line.split(" ");
                docs.append(TaggedDocument(partes, [etiqueta+str(i)]))
                i+=1
            fData.close()
    print("Cargados datos...Cargado",len(docs),"...Entrenando")
    start = timeit.default_timer()
    model = Doc2Vec(docs, vector_size=100, window=2, min_count=1)
    model.train(docs, total_examples=model.corpus_count, epochs=ep)
    model.save(carpetaModels+"trained.full."+str(ep)+"."+str(fold))
    stop=timeit.default_timer();
    print("Entrenado en ",stop-start,"...Guardando")
    fOut=open(carpetaFolds+"doc2vec.training.full."+str(ep)+"."+str(fold)+".csv","w")
    for i in range(0, 100):
        fOut.write("f"+str(i)+",")
    fOut.write("type\n")
    for etiqueta in etiquetas:
        i=0;
        for foldActual in range(1, 11):
            if foldActual==fold:
                continue
            fData=open(carpetaData+etiqueta+str(foldActual)+".txt");
            for line in fData:
                for elemento in model.docvecs[etiqueta+str(i)]:
                        fOut.write(str(elemento)+",")
                fOut.write(etiqueta+"\n");
                i+=1
            fData.close();
    fOut.close();

def generateTestingFullFold(fold, ep):
    global carpeta
    global etiquetas
    carpetaData=carpeta+"9010/";
    carpetaModels=carpeta+"models/";
    carpetaFolds=carpeta+"folds/"
    fOut=open(carpetaFolds+"doc2vec.testing.full."+str(ep)+"."+str(fold)+".csv","w")
    for i in range(0, 100):
        fOut.write("f"+str(i)+",")
    fOut.write("type\n")
    for etiqueta in etiquetas:
        fData=open(carpetaData+etiqueta+str(fold)+".txt");
        for line in fData:
            line=line.rstrip();
            partes=line.split(" ");
            model=Doc2Vec.load(carpetaModels+"trained.full."+str(ep)+"."+str(fold))
            obtained=model.infer_vector(partes, epochs=ep)
            for i in obtained:
                fOut.write(str(i)+",")
            fOut.write(etiqueta+"\n");
        fData.close();
    fOut.close();


def generateFull(epochs):
    print("Generando modelos para epocas:",epochs)
    for i in range(1, 11):
        print("Entrando:",i) 
        generateTrainingFullFold(i, epochs)
        print("Generando Testing:", i)
        generateTestingFullFold(i, epochs)

#recode();
#btenerPorEtiqueta();
#obtenerFoldsPorEtiqueta();
generateFull(5);
generateFull(100);
generateFull(200);
generateFull(300);


    

            
         






